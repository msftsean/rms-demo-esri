# Azure Production Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rms-demo
  namespace: rms
  labels:
    app: rms-demo
    tier: backend
    environment: azure
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rms-demo
  template:
    metadata:
      labels:
        app: rms-demo
        tier: backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: api
          image: mcr.microsoft.com/dotnet/aspnet:8.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: app-logs
              mountPath: /app/logs
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: "Production"
            - name: ConnectionStrings__DefaultConnection
              value: "Host=azure-postgres;Database=rmsdemodb;Username=rmsuser;Password=secure-password"
            - name: ConnectionStrings__RedisConnection
              value: "azure-redis:6379"
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: app-logs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: rms-demo-service
  namespace: rms
spec:
  selector:
    app: rms-demo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
