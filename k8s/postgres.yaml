apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: rms
spec:
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: rms
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: mcr.microsoft.com/mirror/docker/library/postgres:15-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: rmsdemodb
            - name: POSTGRES_USER
              value: rmsuser
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-sql
          configMap:
            name: postgres-init
      securityContext:
        runAsNonRoot: false
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: rms
type: Opaque
stringData:
  password: defaultpassword
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: rms
data:
  init.sql: |
    -- Enable PostGIS extension for spatial types
    CREATE EXTENSION IF NOT EXISTS postgis;
